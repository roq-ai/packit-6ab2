generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model catalog {
  id                       String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name                     String   @db.VarChar(255)
  description              String?  @db.VarChar(255)
  recyclability            Boolean?
  compostability           Boolean?
  reduced_carbon_footprint Boolean?
  company_id               String?  @db.Uuid
  created_at               DateTime @default(now()) @db.Timestamp(6)
  updated_at               DateTime @default(now()) @db.Timestamp(6)
  company                  company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model company {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?    @db.VarChar(255)
  image       String?    @db.VarChar(255)
  name        String     @db.VarChar(255)
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  updated_at  DateTime   @default(now()) @db.Timestamp(6)
  user_id     String     @db.Uuid
  tenant_id   String     @db.VarChar(255)
  catalog     catalog[]
  user        user       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  project     project[]
  resource    resource[]
  review      review[]
  supplier    supplier[]
}

model project {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  company_id  String?  @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  company     company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model resource {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title      String   @db.VarChar(255)
  content    String?
  company_id String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model review {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  rating     Int?
  comment    String?  @db.VarChar(255)
  company_id String?  @db.Uuid
  user_id    String?  @db.Uuid
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
  company    company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user?    @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model supplier {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String   @db.VarChar(255)
  description String?  @db.VarChar(255)
  company_id  String?  @db.Uuid
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  company     company? @relation(fields: [company_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String    @unique @db.VarChar(255)
  firstName   String?   @db.VarChar(255)
  lastName    String?   @db.VarChar(255)
  roq_user_id String    @db.VarChar(255)
  tenant_id   String    @db.VarChar(255)
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  company     company[]
  review      review[]
}
